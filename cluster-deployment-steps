
Droplets -

1. Droplet for Eureka server
2. Droplet for Spring Cloud Config Server
3. Create 3 droplets to host multiple instances of other microservices

Deployment Steps -

1. Run docker image of Eureka service in eureka droplet  (138.68.241.160)

docker run -d -p 8761:8761 arorajatin08/rapidkart-eureka
docker log -f <container_id>

Eureka URL - http://138.68.241.160:8761/

2. Spring Cloud config server (167.71.150.40)

docker run -d -p 8888:8888 -e eureka.client.service-url.defaultZone=http://netflix:eureka@138.68.241.160:8761/eureka -e eureka.instance.prefer-ip-address=true -e eureka.instance.ip-address=167.71.150.40 arorajatin08/rapidkart-config-server

Next we are going to setup swarm clusters of nodes to host other microservices. In production, it is recommended to have at least 3 manager nodes and good number of worker nodes. But simplicity here, we are going to have total 3 nodes in cluster (with only one Manager node).

3. Go to any of the three nodes (I did it on swarm-node-2) and run below docker swarm command. This command will make this node as Manager.

	a) docker swarm init --advertise-addr 167.172.203.174

	b) Running above command will give below command as output -

	docker swarm join --token SWMTKN-1-210ps1he1vakdyr9ohd9qd3estq6oo9m51w8xsf2yee1stm3q5-f5bnbdweemob9yah88z9hgacm 167.172.203.174:2377

	c) Above command adds a particular node to the Cluster as worker node. Hence, needs to be run on other two nodes.
	Above command will not run successfully in any of the nodes because of firewall issues. To fix this below commands have to be run which is going to allow traffic to docker ports on these machines -

		ufw allow 22/tcp
		ufw allow 2377/tcp
		ufw allow 7946/tcp
		ufw allow 7946/udp
		ufw allow 4789/udp
		ufw reload
		ufw enable
		systemctl restart docker

		These firewall commands have to be run in all the nodes to allow inter node communication.

	d) 	Run this command on Manager node to check status of cluster - docker node ls

	ID                            HOSTNAME            STATUS              AVAILABILITY        MANAGER STATUS      ENGINE VERSION
i8x73lw2wy8ed7byxhesweqgw     swarm-node-01       Ready               Active                                  19.03.1
iyfes5dm478ogudz4h5dr20it *   swarm-node-02       Ready               Active              Leader              19.03.1
jiex58afr7pknzo37v345v5xk     swarm-node-03       Ready               Active                                  19.03.1


4. Configuring Customer Service and Order service

This is done via a compose file. Which is available in rapidkart-customer-service git-hub repo.

SPRING_APPLICATION_JSON property will differ for different services

{"eureka":{"client":{"serviceUrl":{"defaultZone":"http://netflix:eureka@138.68.241.160:8761/eureka"},"region":"default","registerWithEureka":true},"instance":{"preferIpAddress":false,"hostName":"rapidkart-customer-service"}},"spring":{"cloud":{"config":{"uri":"http://MyUserName:MySecretPassword@167.71.150.40:8888","failFast":true}}},"application":{"name":"rapidkart-customer-service"}}

5. Run the docker stack using command -

docker stack deploy --compose-file <nameOfComposeFile>.yaml <nameOfStack>

6. Remove docker swarm stack - docker stack rm <nameOfStack>

docker stack ps <stackName>

